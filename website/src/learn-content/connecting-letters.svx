---
title: Connecting letters
description: How and why to join letters together in Teeline shorthand
slug: connecting-letters
order: 9
---

<script lang="ts">
    import type { OutlineObject } from '$lib/types.ts'
    import OutlineCardGrid from '$lib/cards/OutlineCardGrid.svelte'
    import WordDisemvoweler from '$lib/disemvoweler/WordDisemvoweler.svelte'
    import WordToOutline from '$lib/WordToOutline.svelte'
</script> 

The full process going on in the shorthand writer's brain is as follows:

- Strip words of superfluous letters (i.e., [disemvowelment](/learn/disemvowelment))
- Write what remains using [Teeline's alphabet](/learn/the-alphabet) and [special outlines](/learn/special-outlines)

Part of Teeline's beauty is the way letters flow into each other. Cast off your longhand experiences of connecting letters together the same way every time. Combinations are much more fluid in the world of shorthand.

The efficiency of shorthand is in the way it connects letters together. Let's look at a few examples.

<WordToOutline word={'rose'} />
<WordToOutline word={'fort'} />
<WordToOutline word={'blue'} />

With each step of the process, you are saving time. Going from 'rose' to 'rs' cuts the number of longhand pen strokes from four to two - then the conversion to shorthand makes it one. Letter combinations are fluid and efficient.

The savings are even better with [special outlines](/learn/special-outlines). Let's take the one for 'conference' as an example.

<OutlineCardGrid wordsAndPhrases={["conference"]} />

Look at that. One motion of the pen. Eleven would be needed to write it out in longhand. Even the disemvoweled version takes seven.

<WordDisemvoweler word="conference" />

This is an extreme example given 'conference' has an extra succinct special outline, but it represents a key tenet of shorthand: **the fewer pen strokes the better**.
